[35m[1mConsolidate compiler generated dependencies of target robot_func[0m
[ 50%] Built target robot_state_get
[ 75%] [32mBuilding CXX object CMakeFiles/robot_func.dir/src/robot_func.cpp.o[0m
[01m[K/home/dky/Projects/dky_robot/src/robot_kinematics/src/robot_func.cpp:[m[K In member function â€˜[01m[Kvoid RobotFunctions::working_mode_callback(robot_interfaces::msg::QtRecv_<std::allocator<void> >::SharedPtr)[m[Kâ€™:
[01m[K/home/dky/Projects/dky_robot/src/robot_kinematics/src/robot_func.cpp:78:59:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kmoveit::core::RobotState::copyJointGroupPositions(const std::vector<std::__cxx11::basic_string<char> >&, std::vector<double, std::allocator<double> >&)[m[Kâ€™
   78 |                 [01;31m[Kcurrent_state->copyJointGroupPositions(arm->getJointModelGroupNames(), joint_values)[m[K;
      |                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K

In file included from [01m[K/opt/ros/humble/include/moveit/move_group_interface/move_group_interface.h:41[m[K,
                 from [01m[K/home/dky/Projects/dky_robot/src/robot_kinematics/src/robot_func.cpp:6[m[K:
[01m[K/opt/ros/humble/include/moveit/robot_state/robot_state.h:691:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid moveit::core::RobotState::copyJointGroupPositions(const string&, std::vector<double, std::allocator<double> >&) const[m[Kâ€™
  691 |   void [01;36m[KcopyJointGroupPositions[m[K(const std::string& joint_group_name, std::vector<double>& gstate) const
      |        [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/humble/include/moveit/robot_state/robot_state.h:691:51:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst std::vector<std::__cxx11::basic_string<char> >[m[Kâ€™ to â€˜[01m[Kconst string&[m[Kâ€™ {aka â€˜[01m[Kconst std::__cxx11::basic_string<char>&[m[Kâ€™}
  691 |   void copyJointGroupPositions([01;36m[Kconst std::string& joint_group_name[m[K, std::vector<double>& gstate) const
      |                                [01;36m[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/humble/include/moveit/robot_state/robot_state.h:704:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid moveit::core::RobotState::copyJointGroupPositions(const string&, double*) const[m[Kâ€™
  704 |   void [01;36m[KcopyJointGroupPositions[m[K(const std::string& joint_group_name, double* gstate) const
      |        [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/humble/include/moveit/robot_state/robot_state.h:704:51:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst std::vector<std::__cxx11::basic_string<char> >[m[Kâ€™ to â€˜[01m[Kconst string&[m[Kâ€™ {aka â€˜[01m[Kconst std::__cxx11::basic_string<char>&[m[Kâ€™}
  704 |   void copyJointGroupPositions([01;36m[Kconst std::string& joint_group_name[m[K, double* gstate) const
      |                                [01;36m[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/humble/include/moveit/robot_state/robot_state.h:714:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid moveit::core::RobotState::copyJointGroupPositions(const moveit::core::JointModelGroup*, std::vector<double, std::allocator<double> >&) const[m[Kâ€™
  714 |   void [01;36m[KcopyJointGroupPositions[m[K(const JointModelGroup* group, std::vector<double>& gstate) const
      |        [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/humble/include/moveit/robot_state/robot_state.h:714:55:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst std::vector<std::__cxx11::basic_string<char> >[m[Kâ€™ to â€˜[01m[Kconst moveit::core::JointModelGroup*[m[Kâ€™
  714 |   void copyJointGroupPositions([01;36m[Kconst JointModelGroup* group[m[K, std::vector<double>& gstate) const
      |                                [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[01m[K/opt/ros/humble/include/moveit/robot_state/robot_state.h:723:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid moveit::core::RobotState::copyJointGroupPositions(const moveit::core::JointModelGroup*, double*) const[m[Kâ€™
  723 |   void [01;36m[KcopyJointGroupPositions[m[K(const JointModelGroup* group, double* gstate) const;
      |        [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/humble/include/moveit/robot_state/robot_state.h:723:55:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst std::vector<std::__cxx11::basic_string<char> >[m[Kâ€™ to â€˜[01m[Kconst moveit::core::JointModelGroup*[m[Kâ€™
  723 |   void copyJointGroupPositions([01;36m[Kconst JointModelGroup* group[m[K, double* gstate) const;
      |                                [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[01m[K/opt/ros/humble/include/moveit/robot_state/robot_state.h:728:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid moveit::core::RobotState::copyJointGroupPositions(const string&, Eigen::VectorXd&) const[m[Kâ€™
  728 |   void [01;36m[KcopyJointGroupPositions[m[K(const std::string& joint_group_name, Eigen::VectorXd& values) const
      |        [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/humble/include/moveit/robot_state/robot_state.h:728:51:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst std::vector<std::__cxx11::basic_string<char> >[m[Kâ€™ to â€˜[01m[Kconst string&[m[Kâ€™ {aka â€˜[01m[Kconst std::__cxx11::basic_string<char>&[m[Kâ€™}
  728 |   void copyJointGroupPositions([01;36m[Kconst std::string& joint_group_name[m[K, Eigen::VectorXd& values) const
      |                                [01;36m[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/humble/include/moveit/robot_state/robot_state.h:738:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid moveit::core::RobotState::copyJointGroupPositions(const moveit::core::JointModelGroup*, Eigen::VectorXd&) const[m[Kâ€™
  738 |   void [01;36m[KcopyJointGroupPositions[m[K(const JointModelGroup* group, Eigen::VectorXd& values) const;
      |        [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/humble/include/moveit/robot_state/robot_state.h:738:55:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst std::vector<std::__cxx11::basic_string<char> >[m[Kâ€™ to â€˜[01m[Kconst moveit::core::JointModelGroup*[m[Kâ€™
  738 |   void copyJointGroupPositions([01;36m[Kconst JointModelGroup* group[m[K, Eigen::VectorXd& values) const;
      |                                [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
gmake[2]: *** [CMakeFiles/robot_func.dir/build.make:76: CMakeFiles/robot_func.dir/src/robot_func.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:165: CMakeFiles/robot_func.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
